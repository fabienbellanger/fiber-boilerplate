basePath: /api
definitions:
  api.userAuth:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  api.userLogin:
    properties:
      created_at:
        type: string
      expires_at:
        type: string
      firstname:
        type: string
      id:
        type: string
      lastname:
        type: string
      token:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      firstname:
        type: string
      id:
        type: string
      lastname:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  utils.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: Bad Request
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: valentil@gmail.com
    name: API Support
  description: This is a boilerplate for Fiber
  license:
    name: Apache 2.0
  title: Fiber Boilerplate
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.userAuth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.userLogin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Authenticate user
      tags:
      - Authentication
  /users:
    get:
      consumes:
      - application/json
      description: List all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: List all users
      tags:
      - User
  /users/{id}:
    get:
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get user by ID
      tags:
      - User
securityDefinitions:
  BearerAuth:
    type: basic
swagger: "2.0"
